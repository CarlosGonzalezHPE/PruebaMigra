<project name="DEG Orange Spain / HPE CMS Iberia, 2017-2018" default="build" basedir=".">

  <description>
  </description>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="lib/ant-contrib-0.6.jar"/>
    </classpath>
  </taskdef>

  <target name="build" description="">
    <echo></echo>
    <echo>Building files for all nodes'</echo>
    <echo></echo>

    <foreach param="node" list="mxulodeg20,mxulodeg21,mxulodeg22,mxulodeg23,mxulodeg31,mxulodeg32,mxulodeg33,mxfuodeg21,mxfuodeg22,mxfuodeg31,mxfuodeg32" target="build-node"/>
  </target>

  <target name="build-node"
          description="Expected parameters: -Dnode=... [-Dloglevel=INFO|DEBUG]"
          depends="check,prepare-node">
    <property name="build.profiles.scripts">
       profiles/common.properties private_${node}/common.properties
    </property>

    <echo></echo>
    <echo>Building files for node '${node}'</echo>
    <echo></echo>

    <exec executable="perl"
          dir="."
          failonerror="true">
      <arg line="-w scripts/build.pl"/>
      <arg line="-R"/>
      <arg line="-t .work/${node}/tmp/templates_tobuild"/>
      <arg line="-p ${build.profiles.scripts}"/>
      <arg line="-d .work/${node}/built"/>
      <arg line="-l ${buildloglevel}"/>
    </exec>
  </target>

  <target name="prepare-node"
          depends="check-node,clean-node">
    <mkdir dir=".work/${node}/tmp/templates_tobuild"/>
    <mkdir dir=".work/${node}/built"/>
    <copy todir=".work/${node}/tmp/templates_tobuild">
      <fileset dir="../templates_tobuild"/>
    </copy>

    <if>
      <or>
        <equals arg1="${node}" arg2="mxfuodeg31"/>
        <equals arg1="${node}" arg2="mxfuodeg32"/>
        <equals arg1="${node}" arg2="mxulodeg31"/>
        <equals arg1="${node}" arg2="mxulodeg32"/>
        <equals arg1="${node}" arg2="mxulodeg33"/>
      </or>
      <then>
         <delete dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/mngr" includeemptydirs="true"/>
          <move todir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM">
            <fileset dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/appserver"/>
          </move>
          <delete dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/appserver" includeemptydirs="true"/>
      </then>
      <else>
        <delete dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/appserver" includeemptydirs="true"/>
        <move todir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM">
          <fileset dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/mngr"/>
        </move>
        <delete dir=".work/${node}/tmp/templates_tobuild/opt/deg/IUM/mngr" includeemptydirs="true"/>
      </else>
    </if>

  </target>

  <target name="deploy-node"
          description="Expected parameters: -Dnode=... -Dtree=... [-Dfilepattern=...] [-Dcreatedir=true] [-Dchangeperms=true] [-Dloglevel=INFO|DEBUG]"
          depends="check-node,check-tree">
    <echo>Deploying files for node '${node}'</echo>

    <condition property="arg1" value="-f ${filepattern}">
      <isset property="filepattern"/>
    </condition>

    <condition property="arg2" value="-c">
      <and>
        <isset property="createdir"/>
        <equals arg1="${createdir}" arg2="true"/>
      </and>
    </condition>

    <condition property="arg3" value="-p">
      <and>
        <isset property="changeperms"/>
        <equals arg1="${changeperms}" arg2="true"/>
      </and>
    </condition>

    <condition property="arg4" value="-g">
      <equals arg1="${loglevel}" arg2="DEBUG"/>
    </condition>

    <echo>"${deployargs}"</echo>

    <exec executable="bash"
          dir="."
          failonerror="true">
      <arg line="-c 'scripts/deploy.sh -h ${node} -t ${tree} ${arg1} ${arg2} ${arg3} ${arg4}'"/>
    </exec>

  </target>

  <target name="clean"
          description=""
          depends="check">
    <antcall target="clean-node">
      <param name="node" value="mxfuodeg20"/>
    </antcall>
  </target>

  <target name="clean-node"
          description="Expected parameters: -Dnode=..."
          depends="check-node">

    <delete dir=".work/${node}/tmp" includeemptydirs="true"/>
    <delete dir=".work/${node}/built" includeemptydirs="true"/>
    <delete dir=".work/${node}/to_build" includeemptydirs="true"/>
  </target>

  <target name="check">
    <condition property="loglevel" value="INFO">
      <not>
        <isset property="loglevel"/>
      </not>
    </condition>

    <fail message="Bad value '${loglevel}' for parameter 'loglevel'. Expected values: INFO|DEBUG">
      <condition>
        <not>
          <or>
            <equals arg1="${loglevel}" arg2="CRITICAL"/>
            <equals arg1="${loglevel}" arg2="ERROR"/>
            <equals arg1="${loglevel}" arg2="WARNING"/>
            <equals arg1="${loglevel}" arg2="INFO"/>
            <equals arg1="${loglevel}" arg2="DEBUG"/>
            <equals arg1="${loglevel}" arg2="DEBUG2"/>
            <equals arg1="${loglevel}" arg2="DEBUG3"/>
            <equals arg1="${loglevel}" arg2="DEBUG4"/>
          </or>
        </not>
      </condition>
    </fail>

    <condition property="buildloglevel" value="4">
      <equals arg1="${loglevel}" arg2="INFO"/>
    </condition>

    <condition property="buildloglevel" value="5">
      <equals arg1="${loglevel}" arg2="DEBUG"/>
    </condition>
  </target>

  <target name="check-node">
    <fail message="Missing parameter 'node'">
      <condition>
        <not>
          <isset property="node"/>
        </not>
      </condition>
    </fail>

    <fail message="Bad value '${node}' for parameter 'node'. Expected values: mngr|mngr1|mngr2|app1|app2">
      <condition>
        <not>
          <or>
            <equals arg1="${node}" arg2="mxfuodeg20"/>
            <equals arg1="${node}" arg2="mxfuodeg21"/>
            <equals arg1="${node}" arg2="mxfuodeg22"/>
            <equals arg1="${node}" arg2="mxfuodeg31"/>
            <equals arg1="${node}" arg2="mxfuodeg32"/>
            <equals arg1="${node}" arg2="mxulodeg20"/>
            <equals arg1="${node}" arg2="mxulodeg21"/>
            <equals arg1="${node}" arg2="mxulodeg22"/>
            <equals arg1="${node}" arg2="mxulodeg23"/>
            <equals arg1="${node}" arg2="mxulodeg31"/>
            <equals arg1="${node}" arg2="mxulodeg32"/>
            <equals arg1="${node}" arg2="mxulodeg33"/>
          </or>
        </not>
      </condition>
    </fail>
  </target>

  <target name="check-tree">
    <fail message="Missing parameter 'tree'">
      <condition>
        <not>
          <isset property="tree"/>
        </not>
      </condition>
    </fail>
  </target>

</project>

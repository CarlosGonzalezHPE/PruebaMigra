<transformations xmlns="http://www.hp.com/usage/datastruct/transform"
    targetNamespace="http://www.hp.com/usage/datastruct/transform/SNME_diameterSWa_to_XFD_diameterSWa">

    <import prefix="t" ns="http://www.hp.com/usage/datastruct/transform" />
    <import prefix="tnme" ns="http://www.hp.com/usage/datastruct/transform/nme" />

    <import prefix="xfd" ns="http://www.hp.com/usage/datastruct/xfd/diameterSWa" />
    <import prefix="snme" ns="http://www.hp.com/usage/nme/nmeschema/diameterSWa" />
    <import prefix="nme" ns="http://www.hp.com/usage/nme/nmeschema" />

    <transformer id="SNME_DiameterEAPAnswerSWa_to_XFD_DiameterEAPAnswerSWa" from="snme:DiameterEAPAnswerSWa" to="xfd:DiameterEAPAnswerSWa">
        <transform input="session_id" output="session_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="auth_application_id" output="auth_application_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="auth_request_type" output="auth_request_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="result_Code" output="result_Code">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="origin_Host" output="origin_Host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_Realm" output="origin_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="user_Name" output="user_Name">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="eap_payload" output="eap_payload">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="eap_reissued_payload" output="eap_reissued_payload">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="eap_master_session_key" output="eap_master_session_key">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="eap_key_name" output="eap_key_name">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="Multi_Round_Time_Out" output="Multi_Round_Time_Out">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="acct_eap_auth_method" output="acct_eap_auth_method">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="service_type" output="service_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="classBytes" output="classBytes">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="configuration_token" output="configuration_token">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="acct_interim_interval" output="acct_interim_interval">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="error_message" output="error_message">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="error_reporting_host" output="error_reporting_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="failed_AVP" output="failed_AVP">
            <transformer from="snme:Failed_avp[]" to="xfd:Failed_avp[]">
                <array>
                    <use-transformer from="snme:Failed_avp" to="xfd:Failed_avp" class="SNME_Failed_avp_to_XFD_Failed_avp" />
                </array>
            </transformer>
        </transform>
        <transform input="idle_timeout" output="idle_timeout">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="authorization_lifeTime" output="authorization_lifeTime">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="auth_grace_period" output="auth_grace_period">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="auth_session_state" output="auth_session_state">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="re_auth_request_type" output="re_auth_request_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="session_timeout" output="session_timeout">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="state" output="state">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="reply_message" output="reply_message">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_state_id" output="origin_state_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="filter_id" output="filter_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="port_limit" output="port_limit">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="callback_id" output="callback_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="callback_number" output="callback_number">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="framed_appletalk_link" output="framed_appletalk_link">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_appletalk_network" output="framed_appletalk_network">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_appletalk_zone" output="framed_appletalk_zone">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_compression" output="framed_compression">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="framed_interface_id" output="framed_interface_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_ip_address" output="framed_ip_address">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipv6_prefix" output="framed_ipv6_prefix">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipv6_pool" output="framed_ipv6_pool">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipv6_route" output="framed_ipv6_route">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="framed_ipv6_netmask" output="framed_ipv6_netmask">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_route" output="framed_route">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="framed_pool" output="framed_pool">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipx_network" output="framed_ipx_network">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="framed_MTU" output="framed_MTU">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_protocol" output="framed_protocol">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="framed_routing" output="framed_routing">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="NAS_filter_rule" output="NAS_filter_rule">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="QoS_filter_rule" output="QoS_filter_rule">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="tunneling" output="tunneling">
            <transformer from="snme:Tunneling[]" to="xfd:Tunneling[]">
                <array>
                    <use-transformer from="snme:Tunneling" to="xfd:Tunneling" class="SNME_Tunneling_to_XFD_Tunneling" />
                </array>
            </transformer>
        </transform>
        <transform input="redirect_host" output="redirect_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="redirect_host_usage" output="redirect_host_usage">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="redirect_max_cache_time" output="redirect_max_cache_time">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="proxy_Info" output="proxy_Info">
            <transformer from="snme:Proxy_Info[]" to="xfd:Proxy_Info[]">
                <array>
                    <use-transformer from="snme:Proxy_Info" to="xfd:Proxy_Info" class="SNME_Proxy_Info_to_XFD_Proxy_Info" />
                </array>
            </transformer>
        </transform>
        <transform input="route_record" output="route_record">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="experimental_result" output="experimental_result">
            <transformer from="snme:Experimental_Result[]" to="xfd:Experimental_Result[]">
                <array>
                    <use-transformer from="snme:Experimental_Result" to="xfd:Experimental_Result" class="SNME_Experimental_Result_to_XFD_Experimental_Result" />
                </array>
            </transformer>
        </transform>
        <transform input="mobile_node_identifier" output="mobile_node_identifier">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="subscription_Id" output="subscription_Id">
            <transformer from="snme:Subscription_Id[]" to="xfd:Subscription_Id[]">
                <array>
                    <use-transformer from="snme:Subscription_Id" to="xfd:Subscription_Id" class="SNME_Subscription_Id_to_XFD_Subscription_Id" />
                </array>
            </transformer>
        </transform>
        <transform input="RAT_type" output="RAT_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="MIP6_feature_vector" output="MIP6_feature_vector">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="SN_Fast_Reauth_Username" output="SN_Fast_Reauth_Username">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="ambr" output="ambr">
            <transformer from="snme:AMBR[]" to="xfd:AMBR[]">
                <array>
                    <use-transformer from="snme:AMBR" to="xfd:AMBR" class="SNME_AMBR_to_XFD_AMBR" />
                </array>
            </transformer>
        </transform>
        <transform input="APN_configuration" output="APN_configuration">
            <transformer from="snme:APN_Configuration[]" to="xfd:APN_Configuration[]">
                <array>
                    <use-transformer from="snme:APN_Configuration" to="xfd:APN_Configuration" class="SNME_APN_Configuration_to_XFD_APN_Configuration" />
                </array>
            </transformer>
        </transform>
    </transformer>

    <transformer id="SNME_DiameterEAPRequestSWa_to_XFD_DiameterEAPRequestSWa" from="snme:DiameterEAPRequestSWa" to="xfd:DiameterEAPRequestSWa">
        <transform input="session_id" output="session_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="auth_application_id" output="auth_application_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="origin_Host" output="origin_Host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_Realm" output="origin_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="destination_Realm" output="destination_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="auth_request_type" output="auth_request_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="destination_host" output="destination_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="NAS_identifier" output="NAS_identifier">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="NAS_ip_address" output="NAS_ip_address">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="NAS_ipv6_address" output="NAS_ipv6_address">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="NAS_port_id" output="NAS_port_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="NAS_port_type" output="NAS_port_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="origin_state_id" output="origin_state_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="port_limit" output="port_limit">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="user_Name" output="user_Name">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="eap_payload" output="eap_payload">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="eap_key_name" output="eap_key_name">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="service_type" output="service_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="state" output="state">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="authorization_lifeTime" output="authorization_lifeTime">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="auth_grace_period" output="auth_grace_period">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="auth_session_state" output="auth_session_state">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="callback_number" output="callback_number">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="called_station_id" output="called_station_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="calling_station_id" output="calling_station_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="originating_line_info" output="originating_line_info">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="connect_info" output="connect_info">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="framed_compression" output="framed_compression">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="framed_interface_id" output="framed_interface_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_ip_address" output="framed_ip_address">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipv6_prefix" output="framed_ipv6_prefix">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_ipv6_netmask" output="framed_ipv6_netmask">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="framed_MTU" output="framed_MTU">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="framed_protocol" output="framed_protocol">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="proxy_Info" output="proxy_Info">
            <transformer from="snme:Proxy_Info[]" to="xfd:Proxy_Info[]">
                <array>
                    <use-transformer from="snme:Proxy_Info" to="xfd:Proxy_Info" class="SNME_Proxy_Info_to_XFD_Proxy_Info" />
                </array>
            </transformer>
        </transform>
        <transform input="route_Record" output="route_Record">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="RAT_type" output="RAT_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="MIP6_feature_vector" output="MIP6_feature_vector">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="ANID" output="ANID">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="visited_network_identifier" output="visited_network_identifier">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="terminal_information" output="terminal_information">
            <transformer from="snme:Terminal_Information[]" to="xfd:Terminal_Information[]">
                <array>
                    <use-transformer from="snme:Terminal_Information" to="xfd:Terminal_Information" class="SNME_Terminal_Information_to_XFD_Terminal_Information" />
                </array>
            </transformer>
        </transform>
        <transform input="failure_indication" output="failure_indication">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="service_selection" output="service_selection">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="UE_local_ip_address" output="UE_local_ip_address">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
    </transformer>

    <transformer id="SNME_SessionTerminationAnswerSWa_to_XFD_SessionTerminationAnswerSWa" from="snme:SessionTerminationAnswerSWa" to="xfd:SessionTerminationAnswerSWa">
        <transform input="session_id" output="session_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="result_Code" output="result_Code">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="origin_Host" output="origin_Host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_Realm" output="origin_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="user_Name" output="user_Name">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="classBytes" output="classBytes">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="error_message" output="error_message">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="error_reporting_host" output="error_reporting_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="failed_AVP" output="failed_AVP">
            <transformer from="snme:Failed_avp[]" to="xfd:Failed_avp[]">
                <array>
                    <use-transformer from="snme:Failed_avp" to="xfd:Failed_avp" class="SNME_Failed_avp_to_XFD_Failed_avp" />
                </array>
            </transformer>
        </transform>
        <transform input="origin_AAA_protocol" output="origin_AAA_protocol">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="origin_state_id" output="origin_state_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="redirect_host" output="redirect_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="redirect_host_usage" output="redirect_host_usage">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="redirect_max_cache_time" output="redirect_max_cache_time">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="proxy_Info" output="proxy_Info">
            <transformer from="snme:Proxy_Info[]" to="xfd:Proxy_Info[]">
                <array>
                    <use-transformer from="snme:Proxy_Info" to="xfd:Proxy_Info" class="SNME_Proxy_Info_to_XFD_Proxy_Info" />
                </array>
            </transformer>
        </transform>
    </transformer>

    <transformer id="SNME_SessionTerminationRequestSWa_to_XFD_SessionTerminationRequestSWa" from="snme:SessionTerminationRequestSWa" to="xfd:SessionTerminationRequestSWa">
        <transform input="session_id" output="session_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_Host" output="origin_Host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="origin_Realm" output="origin_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="destination_Realm" output="destination_Realm">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="auth_application_id" output="auth_application_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="termination_cause" output="termination_cause">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="user_Name" output="user_Name">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="destination_host" output="destination_host">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="classBytes" output="classBytes">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="origin_AAA_protocol" output="origin_AAA_protocol">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="origin_State_Id" output="origin_State_Id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="proxy_Info" output="proxy_Info">
            <transformer from="snme:Proxy_Info[]" to="xfd:Proxy_Info[]">
                <array>
                    <use-transformer from="snme:Proxy_Info" to="xfd:Proxy_Info" class="SNME_Proxy_Info_to_XFD_Proxy_Info" />
                </array>
            </transformer>
        </transform>
        <transform input="route_Record" output="route_Record">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="eap_payload" output="eap_payload">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
    </transformer>

    <transformer id="SNME_Failed_avp_to_XFD_Failed_avp" from="snme:Failed_avp" to="xfd:Failed_avp">
        <transform input="value" output="value">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
    </transformer>

    <transformer id="SNME_AMBR_to_XFD_AMBR" from="snme:AMBR" to="xfd:AMBR">
        <transform input="value" output="value">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
    </transformer>

    <transformer id="SNME_APN_Configuration_to_XFD_APN_Configuration" from="snme:APN_Configuration" to="xfd:APN_Configuration">
        <transform input="value" output="value">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
    </transformer>

    <transformer id="SNME_Tunneling_to_XFD_Tunneling" from="snme:Tunneling" to="xfd:Tunneling">
        <transform input="tunnel_type" output="tunnel_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="tunnel_medium_type" output="tunnel_medium_type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
        <transform input="tunnel_client_endpoint" output="tunnel_client_endpoint">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="tunnel_server_endpoint" output="tunnel_server_endpoint">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="tunnel_preference" output="tunnel_preference">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="tunnel_client_auth_id" output="tunnel_client_auth_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="tunnel_server_auth_id" output="tunnel_server_auth_id">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="tunnel_assignment_id" output="tunnel_assignment_id">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="tunnel_password" output="tunnel_password">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="tunnel_private_group_id" output="tunnel_private_group_id">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
    </transformer>

    <transformer id="SNME_Proxy_Info_to_XFD_Proxy_Info" from="snme:Proxy_Info" to="xfd:Proxy_Info">
        <transform input="proxyHost" output="proxyHost">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="proxyState" output="proxyState">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
    </transformer>

    <transformer id="SNME_Experimental_Result_to_XFD_Experimental_Result" from="snme:Experimental_Result" to="xfd:Experimental_Result">
        <transform input="vendor_id" output="vendor_id">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
        <transform input="experimental_result_code" output="experimental_result_code">
            <use-transformer from="long" to="long" class="t:LongToLongCopy" />
        </transform>
    </transformer>

    <transformer id="SNME_Subscription_Id_to_XFD_Subscription_Id" from="snme:Subscription_Id" to="xfd:Subscription_Id">
        <transform input="subscription_Id_Data" output="subscription_Id_Data">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="subscription_Id_Type" output="subscription_Id_Type">
            <use-transformer from="int" to="int" class="t:IntToIntCopy" />
        </transform>
    </transformer>

    <transformer id="SNME_Terminal_Information_to_XFD_Terminal_Information" from="snme:Terminal_Information" to="xfd:Terminal_Information">
        <transform input="IMEI" output="IMEI">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
        <transform input="TGPP2_MEID" output="TGPP2_MEID">
            <use-transformer from="nme:byte-array" to="byte[]" class="tnme:ByteArrayWrapperToByteArray" />
        </transform>
        <transform input="software_version" output="software_version">
            <use-transformer from="string" to="string" class="t:StringToStringCopy" />
        </transform>
    </transformer>
</transformations>